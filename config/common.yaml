console:
  serviceAccounts:
    - metadata:
        name: "{{.ApplicationName}}-rhpamsvc"
        labels:
          app: "{{.ApplicationName}}"
  roles:
    - metadata:
        name: "{{.ApplicationName}}-rhpamsvc-view"
      rules:
        - apiGroups:
            - ""
          resources:
            - "*"
          verbs:
            - get
            - list
            - view
        - apiGroups:
            - app.kiegroup.org
            - apps.openshift.io
            - image.openshift.io
            - route.openshift.io
          resources:
            - "*"
          verbs:
            - get
            - list
            - view
  rolebindings:
    - metadata:
        name: "{{.ApplicationName}}-rhpamsvc-view"
      subjects:
        - kind: ServiceAccount
          name: "{{.ApplicationName}}-rhpamsvc"
      roleRef:
        kind: Role
        name: "{{.ApplicationName}}-rhpamsvc-view"
  deploymentConfigs:
    - metadata:
        name: "{{.ApplicationName}}-rhpamcentr"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
      spec:
        strategy:
          type: Recreate
        triggers:
          - type: ImageChange
            imageChangeParams:
              automatic: true
              containerNames:
                - "{{.ApplicationName}}-rhpamcentr"
              from:
                kind: ImageStreamTag
                namespace: "openshift"
                name: "rhpam{{.Version}}-businesscentral-openshift:{{.ImageTag}}"
          - type: ConfigChange
        replicas: 1
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
        template:
          metadata:
            name: "{{.ApplicationName}}-rhpamcentr"
            labels:
              deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
              app: "{{.ApplicationName}}"
              service: "{{.ApplicationName}}-rhpamcentr"
          spec:
            serviceAccountName: "{{.ApplicationName}}-rhpamsvc"
            terminationGracePeriodSeconds: 60
            containers:
              - name: "{{.ApplicationName}}-rhpamcentr"
                image: rhpam{{.Version}}-businesscentral-openshift
                imagePullPolicy: Always
                volumeMounts:
                  - name: businesscentral-keystore-volume
                    mountPath: "/etc/businesscentral-secret-volume"
                    readOnly: true
                resources:
                  requests:
                    memory: 768Mi
                  limits:
                    memory: 1Gi
                livenessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "${KIE_ADMIN_USER}":"${KIE_ADMIN_PWD}" http://localhost:8080/kie-wb.jsp
                  initialDelaySeconds: 180
                  timeoutSeconds: 2
                  periodSeconds: 15
                readinessProbe:
                  exec:
                    command:
                      - "/bin/bash"
                      - "-c"
                      - curl --fail --silent -u "${KIE_ADMIN_USER}":"${KIE_ADMIN_PWD}" http://localhost:8080/kie-wb.jsp
                  initialDelaySeconds: 60
                  timeoutSeconds: 2
                  periodSeconds: 30
                  failureThreshold: 6
                ports:
                  - name: jolokia
                    containerPort: 8778
                    protocol: TCP
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                  - name: https
                    containerPort: 8443
                    protocol: TCP
                  - name: ping
                    containerPort: 8888
                    protocol: TCP
                env:
                  - name: KIE_ADMIN_USER
                    value: adminUser
                  - name: KIE_ADMIN_PWD
                    value: "{{.AdminPassword}}"
                  - name: KIE_MAVEN_USER
                    value: mavenUser
                  - name: KIE_MAVEN_PWD
                    value: "{{.MavenPassword}}"
                  - name: KIE_SERVER_CONTROLLER_USER
                    value: controllerUser
                  - name: KIE_SERVER_CONTROLLER_PWD
                    value: "{{.ControllerPassword}}"
                  - name: KIE_MBEANS
                    value: enabled
                  - name: HTTPS_KEYSTORE_DIR
                    value: "/etc/businesscentral-secret-volume"
                  - name: HTTPS_KEYSTORE
                    value: "keystore.jks"
                  - name: HTTPS_NAME
                    value: "jboss"
                  - name: HTTPS_PASSWORD
                    value: "{{.KeyStorePassword}}"
                  - name: WORKBENCH_ROUTE_NAME
                    value: "{{.ApplicationName}}-rhpamcentr"
                  - name: JGROUPS_PING_PROTOCOL
                    value: "openshift.DNS_PING"
                  - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                    value: "{{.ApplicationName}}-rhpamcentr-ping"
                  - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                    value: "8888"
                  - name: SSO_OPENIDCONNECT_DEPLOYMENTS
                    value: "ROOT.war"
                  - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
                    value: "false"
                  - name: SSO_PRINCIPAL_ATTRIBUTE
                    value: "preferred_username"
            volumes:
              - name: businesscentral-keystore-volume
                secret:
                  secretName: "{{.ApplicationName}}-businesscentral-app-secret"
  services:
    - spec:
        ports:
          - name: http
            port: 8080
            targetPort: 8080
          - name: https
            port: 8443
            targetPort: 8443
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          description: All the Business Central web server's ports.
    - spec:
        clusterIP: "None"
        ports:
          - name: "ping"
            port: 8888
            targetPort: 8888
        selector:
          deploymentConfig: "{{.ApplicationName}}-rhpamcentr"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr-ping"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
          description: "The JGroups ping port for clustering."
  routes:
    - id: "{{.ApplicationName}}-rhpamcentr-https"
      metadata:
        name: "{{.ApplicationName}}-rhpamcentr"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
        annotations:
          description: Route for Business Central's https service.
          haproxy.router.openshift.io/timeout: 60s
      spec:
        host: ""
        to:
          name: "{{.ApplicationName}}-rhpamcentr"
        port:
          targetPort: https
        tls:
          insecureEdgeTerminationPolicy: Redirect
          termination: passthrough
  persistentVolumeClaims:
    - metadata:
        name: "{{.ApplicationName}}-rhpamcentr-claim"
        labels:
          app: "{{.ApplicationName}}"
          service: "{{.ApplicationName}}-rhpamcentr"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

## KIE Servers BEGIN
servers:
  ## RANGE BEGINS
  #{{ range $index, $Map := .ServerCount }}
  ## KIE server deployment config BEGIN
  - deploymentConfigs:
      - metadata:
          name: "{{.ApplicationName}}-kieserver-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-kieserver-{{$index}}"
        spec:
          strategy:
            type: Recreate
          triggers:
            - type: ImageChange
              imageChangeParams:
                automatic: true
                containerNames:
                  - "{{.ApplicationName}}-kieserver-{{$index}}"
                from:
                  kind: ImageStreamTag
                  namespace: "openshift"
                  name: "rhpam{{.Version}}-kieserver-openshift:{{.ImageTag}}"
            - type: ConfigChange
          replicas: 3
          selector:
            deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
          template:
            metadata:
              name: "{{.ApplicationName}}-kieserver-{{$index}}"
              labels:
                app: "{{.ApplicationName}}"
                service: "{{.ApplicationName}}-kieserver-{{$index}}"
                deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
            spec:
              serviceAccountName: "{{.ApplicationName}}-rhpamsvc"
              terminationGracePeriodSeconds: 60
              containers:
                - name: "{{.ApplicationName}}-kieserver-{{$index}}"
                  image: "rhpam{{.Version}}-kieserver-openshift"
                  imagePullPolicy: Always
                  env:
                    - name: KIE_ADMIN_USER
                      value: adminUser
                    - name: KIE_ADMIN_PWD
                      value: "{{.AdminPassword}}"
                    - name: KIE_SERVER_USER
                      value: executionUser
                    - name: KIE_SERVER_PWD
                      value: "{{.ServerPassword}}"
                    - name: DROOLS_SERVER_FILTER_CLASSES
                      value: "true"
                    - name: KIE_SERVER_CONTROLLER_USER
                      value: controllerUser
                    - name: KIE_SERVER_CONTROLLER_PWD
                      value: "{{.ControllerPassword}}"
                    - name: KIE_SERVER_CONTROLLER_SERVICE
                      value: "{{.ApplicationName}}-rhpamcentr"
                    - name: KIE_SERVER_CONTROLLER_PROTOCOL
                      value: ws
                    - name: KIE_MBEANS
                      value: enabled
                    - name: KIE_SERVER_ROUTE_NAME
                      value: "{{.ApplicationName}}-kieserver-{{$index}}"
                    - name: KIE_SERVER_USE_SECURE_ROUTE_NAME
                      value: "false"
                    - name: KIE_SERVER_ID
                      value: "{{.ApplicationName}}-kieserver-{{$index}}"
                    - name: RHPAMCENTR_MAVEN_REPO_USERNAME
                      value: mavenUser
                    - name: RHPAMCENTR_MAVEN_REPO_PASSWORD
                      value: "{{.MavenPassword}}"
                    - name: RHPAMCENTR_MAVEN_REPO_SERVICE
                      value: "{{.ApplicationName}}-rhpamcentr"
                    - name: MAVEN_REPOS
                      value: "RHPAMCENTR,EXTERNAL"
                    - name: RHPAMCENTR_MAVEN_REPO_PATH
                      value: /maven2/
                    - name: SSO_OPENIDCONNECT_DEPLOYMENTS
                      value: ROOT.war
                    - name: SSO_DISABLE_SSL_CERTIFICATE_VALIDATION
                      value: "false"
                    - name: SSO_PRINCIPAL_ATTRIBUTE
                      value: preferred_username
                    - name: KIE_SERVER_BYPASS_AUTH_USER
                      value: "false"
                    - name: HTTPS_KEYSTORE_DIR
                      value: "/etc/kieserver-secret-volume"
                    - name: HTTPS_KEYSTORE
                      value: "keystore.jks"
                    - name: HTTPS_NAME
                      value: "jboss"
                    - name: HTTPS_PASSWORD
                      value: "{{.KeyStorePassword}}"
                    - name: FILTERS
                      value: "AC_ALLOW_ORIGIN,AC_ALLOW_METHODS,AC_ALLOW_HEADERS,AC_ALLOW_CREDENTIALS,AC_MAX_AGE"
                    - name: AC_ALLOW_ORIGIN_FILTER_RESPONSE_HEADER_NAME
                      value: "Access-Control-Allow-Origin"
                    - name: AC_ALLOW_ORIGIN_FILTER_RESPONSE_HEADER_VALUE
                      value: "*"
                    - name: AC_ALLOW_METHODS_FILTER_RESPONSE_HEADER_NAME
                      value: "Access-Control-Allow-Methods"
                    - name: AC_ALLOW_METHODS_FILTER_RESPONSE_HEADER_VALUE
                      value: "GET, POST, OPTIONS, PUT"
                    - name: AC_ALLOW_HEADERS_FILTER_RESPONSE_HEADER_NAME
                      value: "Access-Control-Allow-Headers"
                    - name: AC_ALLOW_HEADERS_FILTER_RESPONSE_HEADER_VALUE
                      value: "Accept, Authorization, Content-Type, X-Requested-With"
                    - name: AC_ALLOW_CREDENTIALS_FILTER_RESPONSE_HEADER_NAME
                      value: "Access-Control-Allow-Credentials"
                    - name: AC_ALLOW_CREDENTIALS_FILTER_RESPONSE_HEADER_VALUE
                      value: "true"
                    - name: AC_MAX_AGE_FILTER_RESPONSE_HEADER_NAME
                      value: "Access-Control-Max-Age"
                    - name: AC_MAX_AGE_FILTER_RESPONSE_HEADER_VALUE
                      value: "1"
                  resources:
                    limits:
                      memory: 1Gi
                  livenessProbe:
                    exec:
                      command:
                        - "/bin/bash"
                        - "-c"
                        - curl --fail --silent -u "${KIE_ADMIN_USER}":"${KIE_ADMIN_PWD}" http://localhost:8080/services/rest/server/healthcheck
                    initialDelaySeconds: 180
                    timeoutSeconds: 2
                    periodSeconds: 15
                    failureThreshold: 3
                  readinessProbe:
                    exec:
                      command:
                        - "/bin/bash"
                        - "-c"
                        - curl --fail --silent -u "${KIE_ADMIN_USER}":"${KIE_ADMIN_PWD}" http://localhost:8080/services/rest/server/readycheck
                    initialDelaySeconds: 60
                    timeoutSeconds: 2
                    periodSeconds: 30
                    failureThreshold: 6
                  ports:
                    - name: jolokia
                      containerPort: 8778
                      protocol: TCP
                    - name: http
                      containerPort: 8080
                      protocol: TCP
                    - name: https
                      containerPort: 8443
                      protocol: TCP
                  volumeMounts:
                    - mountPath: /etc/kieserver-secret-volume
                      name: kieserver-keystore-volume
                      readOnly: true
              volumes:
                - name: kieserver-keystore-volume
                  secret:
                    secretName: "{{.ApplicationName}}-kieserver-{{$index}}-app-secret"
      ## KIE server deployment config END
    ## KIE server services BEGIN
    services:
      - spec:
          ports:
            - name: http
              port: 8080
              targetPort: 8080
            - name: https
              port: 8443
              targetPort: 8443
          selector:
            deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
        metadata:
          name: "{{.ApplicationName}}-kieserver-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-kieserver-{{$index}}"
          annotations:
            description: All the KIE server web server's ports. (KIE server)
      - spec:
          clusterIP: "None"
          ports:
            - name: "ping"
              port: 8888
              targetPort: 8888
          selector:
            deploymentConfig: "{{.ApplicationName}}-kieserver-{{$index}}"
        metadata:
          name: "{{.ApplicationName}}-kieserver-{{$index}}-ping"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-kieserver-{{$index}}"
          annotations:
            service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
            description: "The JGroups ping port for clustering."
      ## KIE server services END
    ## KIE server routes BEGIN
    routes:
      - id: "{{.ApplicationName}}-kieserver-{{$index}}-https"
        metadata:
          name: "{{.ApplicationName}}-kieserver-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-kieserver-{{$index}}"
          annotations:
            description: Route for KIE server's https service.
        spec:
          to:
            name: "{{.ApplicationName}}-kieserver-{{$index}}"
          port:
            targetPort: https
          tls:
            insecureEdgeTerminationPolicy: Redirect
            termination: passthrough
      ## KIE server routes END
#{{end}}
## RANGE ends
## KIE Servers END

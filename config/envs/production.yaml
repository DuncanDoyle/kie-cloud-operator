console:
  deploymentConfigs:
    - metadata:
        name: "{{.ApplicationName}}-{{.ConsoleName}}"
      spec:
        replicas: 3
        containers:
          - name: "{{.ApplicationName}}-{{.ConsoleName}}"
            env:
              - name: MAVEN_REPO_URL
                value: ""
              - name: MAVEN_REPO_USERNAME
                value: ""
              - name: MAVEN_REPO_PASSWORD
                value: ""
## KIE smartrouter BEGIN
others:
  - persistentVolumeClaims:
      - metadata:
          name: "{{.ApplicationName}}-smartrouter-claim"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-smartrouter"
        spec:
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: "64Mi"
    deploymentConfigs:
      - metadata:
          name: "{{.ApplicationName}}-smartrouter"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-smartrouter"
        spec:
          strategy:
            type: Recreate
          triggers:
            - type: ImageChange
              imageChangeParams:
                automatic: true
                containerNames:
                  - "{{.ApplicationName}}-smartrouter"
                from:
                  kind: ImageStreamTag
                  namespace: "openshift"
                  name: "rhpam{{.Version}}-smartrouter-openshift:{{.ImageTag}}"
            - type: ConfigChange
          replicas: 2
          selector:
            deploymentConfig: "{{.ApplicationName}}-smartrouter"
          template:
            metadata:
              name: "{{.ApplicationName}}-smartrouter"
              labels:
                app: "{{.ApplicationName}}"
                deploymentConfig: "{{.ApplicationName}}-smartrouter"
                service: "{{.ApplicationName}}-smartrouter"
            spec:
              terminationGracePeriodSeconds: 60
              containers:
                - name: "{{.ApplicationName}}-smartrouter"
                  image: rhpam{{.Version}}-smartrouter-openshift
                  imagePullPolicy: Always
                  resources:
                    requests:
                      memory: "512Mi"
                    limits:
                      memory: "512Mi"
                  ports:
                    - name: http
                      containerPort: 9000
                      protocol: TCP
                  env:
                    - name: KIE_SERVER_ROUTER_HOST
                      valueFrom:
                        fieldRef:
                          fieldPath: status.podIP
                    - name: KIE_SERVER_ROUTER_PORT
                      value: "9000"
                    - name: KIE_SERVER_ROUTER_URL_EXTERNAL
                      value: ""
                    - name: KIE_SERVER_ROUTER_ID
                      value: "kie-server-router"
                    - name: KIE_SERVER_ROUTER_NAME
                      value: "KIE Server Router"
                    - name: KIE_SERVER_ROUTER_PROTOCOL
                      value: ""
                    - name: KIE_SERVER_CONTROLLER_USER
                      value: controllerUser
                    - name: KIE_SERVER_CONTROLLER_PWD
                      value: "{{.ControllerPassword}}"
                    - name: KIE_SERVER_CONTROLLER_SERVICE
                      value: "{{.ApplicationName}}-{{.ConsoleName}}"
                    - name: KIE_SERVER_CONTROLLER_PROTOCOL
                      value: "http"
                    - name: KIE_SERVER_ROUTER_REPO
                      value: "/opt/rhpam-smartrouter/data"
                    - name: KIE_SERVER_ROUTER_CONFIG_WATCHER_ENABLED
                      value: "true"
                  volumeMounts:
                    - name: "{{.ApplicationName}}-smartrouter"
                      mountPath: "/opt/rhpam-smartrouter/data"
              volumes:
                - name: "{{.ApplicationName}}-smartrouter"
                  persistentVolumeClaim:
                    claimName: "{{.ApplicationName}}-smartrouter-claim"
    services:
      - spec:
          ports:
            - port: 9000
              targetPort: 9000
          selector:
            deploymentConfig: "{{.ApplicationName}}-smartrouter"
        metadata:
          name: "{{.ApplicationName}}-smartrouter"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-smartrouter"
          annotations:
            description: The smart router server http port.
    routes:
      - id: "{{.ApplicationName}}-smartrouter-https"
        metadata:
          name: "{{.ApplicationName}}-smartrouter"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-smartrouter"
          annotations:
            description: Route for Smart Router's http service.
        spec:
          host: ""
          to:
            name: "{{.ApplicationName}}-smartrouter"
          tls:
            insecureEdgeTerminationPolicy: Redirect
            termination: passthrough
## KIE smartrouter END

## KIE Servers BEGIN
servers:
  ## RANGE BEGINS
  #{{ range $index, $Map := .ServerCount }}
  ## PostgreSQL persistent volume claim BEGIN
  - persistentVolumeClaims:
      - metadata:
          name: "{{.ApplicationName}}-postgresql-claim-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-postgresql-{{$index}}"
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: "1Gi"

    ## PostgreSQL persistent volume claim END
    ## KIE server deployment config BEGIN
    deploymentConfigs:
      - metadata:
          name: "{{.ApplicationName}}-kieserver-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-kieserver-{{$index}}"
        spec:
          replicas: 3
          template:
            spec:
              containers:
                - name: "{{.ApplicationName}}-kieserver-{{$index}}"
                  env:
                    - name: EXTERNAL_MAVEN_REPO_ID
                      value: ""
                    - name: EXTERNAL_MAVEN_REPO_URL
                      value: ""
                    - name: EXTERNAL_MAVEN_REPO_USERNAME
                      value: ""
                    - name: EXTERNAL_MAVEN_REPO_PASSWORD
                      value: ""
                    - name: KIE_SERVER_ROUTER_SERVICE
                      value: "{{.ApplicationName}}-smartrouter"
                    - name: KIE_SERVER_ROUTER_PORT
                      value: "9000"
                    - name: KIE_SERVER_ROUTER_PROTOCOL
                      value: "http"
                    ## PostgreSQL driver settings BEGIN
                    - name: RHPAM_DRIVER
                      value: "postgresql"
                    - name: KIE_SERVER_PERSISTENCE_DIALECT
                      value: "org.hibernate.dialect.PostgreSQLDialect"
                    - name: RHPAM_USERNAME
                      value: "rhpam"
                    - name: RHPAM_SERVICE_HOST
                      value: "{{.ApplicationName}}-postgresql-{{$index}}"
                    - name: RHPAM_SERVICE_PORT
                      value: "5432"
                    - name: TIMER_SERVICE_DATA_STORE
                      value: "{{.ApplicationName}}-postgresql-{{$index}}"
                    - name: TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL
                      value: "30000"
                    - name: RHPAM_XA_CONNECTION_PROPERTY_URL
                      value: ""
                    ## PostgreSQL driver settings END
      ## KIE server deployment config END
      ## PostgreSQL deployment config BEGIN
      - metadata:
          name: "{{.ApplicationName}}-postgresql-{{$index}}"
          labels:
            app: "{{.ApplicationName}}"
            service: "{{.ApplicationName}}-postgresql-{{$index}}"
        spec:
          strategy:
            type: Recreate
          triggers:
            - type: ImageChange
              imageChangeParams:
                automatic: true
                containerNames:
                  - "{{.ApplicationName}}-postgresql"
                from:
                  kind: ImageStreamTag
                  namespace: "openshift"
                  name: "postgresql:10"
            - type: ConfigChange
          replicas: 1
          selector:
            deploymentConfig: "{{.ApplicationName}}-postgresql-{{$index}}"
          template:
            metadata:
              name: "{{.ApplicationName}}-postgresql-{{$index}}"
              labels:
                deploymentConfig: "{{.ApplicationName}}-postgresql-{{$index}}"
                app: "{{.ApplicationName}}"
                service: "{{.ApplicationName}}-postgresql-{{$index}}"
            spec:
              containers:
                - name: "{{.ApplicationName}}-postgresql"
                  image: postgresql
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    exec:
                      command:
                        - "/usr/libexec/check-container"
                        - "--live"
                    initialDelaySeconds: 120
                    timeoutSeconds: 10
                  readinessProbe:
                    exec:
                      command:
                        - "/usr/libexec/check-container"
                    initialDelaySeconds: 5
                    timeoutSeconds: 1
                  ports:
                    - containerPort: 5432
                      protocol: TCP
                  volumeMounts:
                    - mountPath: "/var/lib/pgsql/data"
                      name: "{{.ApplicationName}}-postgresql-pvol"
                  env:
                    - name: POSTGRESQL_USER
                      value: "rhpam"
                    - name: POSTGRESQL_PASSWORD
                      value: "{{.AdminPassword}}"
                    - name: POSTGRESQL_DATABASE
                      value: "rhpam7"
                    - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
                      value: "100"
              volumes:
                - name: "{{.ApplicationName}}-postgresql-pvol"
                  persistentVolumeClaim:
                    claimName: "{{.ApplicationName}}-postgresql-claim-{{$index}}"
    ## PostgreSQL deployment config END
    services:
      ## PostgreSQL service BEGIN
      - metadata:
          annotations:
            description: The database server's port.
          labels:
            application: prod
            service: "{{.ApplicationName}}-postgresql-{{$index}}"
          name: "{{.ApplicationName}}-postgresql-{{$index}}"
        spec:
          ports:
            - port: 5432
              targetPort: 5432
          selector:
            deploymentConfig: "{{.ApplicationName}}-postgresql-{{$index}}"
    ## PostgreSQL service END
  #{{end}}
  ## RANGE ends
  ## KIE Servers END
